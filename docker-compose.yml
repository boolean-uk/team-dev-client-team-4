services:
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-appuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-apppassword}
      - POSTGRES_DB=${POSTGRES_DB:-appdb}
    ports:
      - "${DB_PORT:-5434}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  api:
    build:
      context: ${API_BUILD_CONTEXT:-../csharp-team-dev-server-team-4/exercise.wwwapi}
      dockerfile: ${API_DOCKERFILE:-Dockerfile}
    image: ${API_IMAGE_NAME:-team-dev-api}
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=${POSTGRES_DB:-appdb};Username=${POSTGRES_USER:-appuser};Password=${POSTGRES_PASSWORD:-apppassword};SSL Mode=Disable
      - Token=${API_TOKEN:-dev-token-please-change}
      - JWT__SigningKey=${JWT_SIGNING_KEY:-dev-super-secret-signing-key}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS:-http://+:8080}
    ports:
      - "${API_PORT:-3001}:8080"
    depends_on:
      - db

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:${API_PORT:-3001}}
    image: ${WEB_IMAGE_NAME:-team-dev-client:web}
    ports:
      - "${WEB_PORT:-3000}:80"
    depends_on:
      - api

volumes:
  pgdata: